diff --git a/src/include/lxc/dialogs.ycp b/src/include/lxc/dialogs.ycp
index fb710ac..6d4f5e7 100644
--- a/src/include/lxc/dialogs.ycp
+++ b/src/include/lxc/dialogs.ycp
@@ -377,6 +377,70 @@ integer Connect (string name)
     return pid;
 }
 
+// update status of the buttons according to current item
+void update_buttons (map<string,boolean> & lxc_map, string selected) {
+
+    if (selected == nil || selected == "")
+    {
+      return;
+    }
+
+    boolean running     = lxc_map[selected]:false;
+    UI::ChangeWidget (`id (`start), `Enabled, !running);
+    UI::ChangeWidget (`id (`stop), `Enabled, running);
+    if (Lxc::textmode)
+    {
+      return;
+    }
+    if (console_pids[selected]:nil == nil)
+    {
+	UI::ReplaceWidget (`id (`rp_console),
+	  // button label
+	  `PushButton (`id (`connect), _("Connect"))
+	);
+	UI::ChangeWidget (`id (`connect), `Enabled, running);
+    }
+    else
+    {
+	UI::ReplaceWidget (`id (`rp_console),
+	  // button label
+	  `PushButton (`id (`disconnect), _("Disconnect"))
+	);
+    }
+}
+
+// update table with fresh items
+void update_table (map<string,boolean> & lxc_map, string & selected) {
+
+    lxc_map     = Lxc::GetContainers ();
+    list<term> lxc_list     = maplist (string name, boolean status, lxc_map, {
+      return `item (name, status ?
+	  // container status
+	  _("Running") :
+	  // container status
+	  _("Stopped")
+      );
+    });
+
+    UI::ChangeWidget (`id (`table), `Items, lxc_list);
+    if (size (lxc_list) == 0)
+    {
+      foreach (any t, [ `table, `destroy, `start, `stop, `connect ], {
+	UI::ChangeWidget (`id (t), `Enabled, false);
+      });
+    }
+    else
+    {
+      UI::SetFocus (`id (`table));
+      if (selected != "")
+      {
+	  UI::ChangeWidget (`id (`table), `CurrentItem, selected);
+      }
+      selected = (string) UI::QueryWidget (`id (`table), `CurrentItem);
+      update_buttons (lxc_map, selected);
+    }
+}
+
 /**
  * Overview of existing Linux Containers
  * @return dialog result
@@ -392,70 +456,6 @@ any OverviewDialog () {
     // mapping of containers to their state
     map<string,boolean> lxc_map = $[];
 
-    // update status of the buttons according to current item
-    void update_buttons (string selected) {
-
-        if (selected == nil || selected == "")
-        {
-          return;
-        }
-
-        boolean running     = lxc_map[selected]:false;
-        UI::ChangeWidget (`id (`start), `Enabled, !running);
-        UI::ChangeWidget (`id (`stop), `Enabled, running);
-        if (Lxc::textmode)
-        {
-          return;
-        }
-        if (console_pids[selected]:nil == nil)
-        {
-            UI::ReplaceWidget (`id (`rp_console),
-              // button label
-              `PushButton (`id (`connect), _("Connect"))
-            );
-            UI::ChangeWidget (`id (`connect), `Enabled, running);
-        }
-        else
-        {
-            UI::ReplaceWidget (`id (`rp_console),
-              // button label
-              `PushButton (`id (`disconnect), _("Disconnect"))
-            );
-        }
-    }
-
-    // update table with fresh items
-    void update_table () {
-
-        lxc_map     = Lxc::GetContainers ();
-        list<term> lxc_list     = maplist (string name, boolean status, lxc_map, {
-          return `item (name, status ?
-              // container status
-              _("Running") :
-              // container status
-              _("Stopped")
-          );
-        });
-
-        UI::ChangeWidget (`id (`table), `Items, lxc_list);
-        if (size (lxc_list) == 0)
-        {
-          foreach (any t, [ `table, `destroy, `start, `stop, `connect ], {
-            UI::ChangeWidget (`id (t), `Enabled, false);
-          });
-        }
-        else
-        {
-          UI::SetFocus (`id (`table));
-          if (selected != "")
-          {
-              UI::ChangeWidget (`id (`table), `CurrentItem, selected);
-          }
-          selected = (string) UI::QueryWidget (`id (`table), `CurrentItem);
-          update_buttons (selected);
-        }
-    }
-
     term contents       = `HBox (`HSpacing (), `VBox (
       `VSpacing (),
       // button label
@@ -483,7 +483,7 @@ any OverviewDialog () {
         Label::BackButton(), Label::FinishButton());
     Wizard::HideBackButton ();
 
-    update_table ();
+    update_table (lxc_map, selected);
 
     any ret = nil;
 
@@ -515,26 +515,26 @@ any OverviewDialog () {
         if (console_pid != nil && SCR::Read (.process.running, console_pid) != true) {
             y2milestone ("console process is dead");
             console_pids        = remove (console_pids, selected);
-            update_buttons (selected);
+            update_buttons (lxc_map, selected);
             continue;
         }
 
         if (ret == `table) {
-            update_buttons (selected);
+            update_buttons (lxc_map, selected);
         }
 
         if (ret == `refresh) {
-            update_table ();
+            update_table (lxc_map, selected);
         }
 
         if (ret == `start) {
             StartContainer (selected);
-            update_table ();
+            update_table (lxc_map, selected);
         }
 
         if (ret == `connect && console_pid == nil) {
             console_pids[selected] = Connect (selected);
-            update_buttons (selected);
+            update_buttons (lxc_map, selected);
         }
 
         if (ret == `disconnect && console_pid != nil) {
@@ -542,18 +542,18 @@ any OverviewDialog () {
             SCR::Execute (.process.kill, console_pid, 15);
             // FIXME timeout + kill -9
             console_pids        = remove (console_pids, selected);
-            update_buttons (selected);
+            update_buttons (lxc_map, selected);
         }
 
         if (ret == `stop) {
             StopContainer (selected);
-            update_table ();
+            update_table (lxc_map, selected);
         }
 
         if (ret == `destroy && Popup::YesNo (sformat (_("Are you sure to delete container '%1'?"), selected))) {
             StopContainer (selected);
             DestroyContainer (selected);
-            update_table ();
+            update_table (lxc_map, selected);
         }
     }
 
